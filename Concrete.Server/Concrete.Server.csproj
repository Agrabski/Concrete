<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net7.0</TargetFramework>
		<Nullable>enable</Nullable>
		<ImplicitUsings>enable</ImplicitUsings>
		<UserSecretsId>aspnet-Concrete.Server-db61fa06-781a-4b9f-8724-39981792e54a</UserSecretsId>
		<LangVersion>11</LangVersion>
		<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>

		<SpaRoot>client-app\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
		<SpaProxyServerUrl>http://localhost:3000</SpaProxyServerUrl>
		<SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
		<EnforceCodeStyleInBuild>True</EnforceCodeStyleInBuild>
		<TypeScriptJSXEmit>react</TypeScriptJSXEmit>

	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="6.0.13" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.OpenIdConnect" Version="6.0.13" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="7.0.9" />
		<PackageReference Include="Microsoft.Identity.Web" Version="1.16.0" />
		<PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.18.0" />
		<PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\Concrete.Core.Extensions.AspNetCore\Concrete.Core.Extensions.AspNetCore.csproj" />
	  <ProjectReference Include="..\Concrete.Core\Concrete.Core.csproj" />
	  <ProjectReference Include="..\Concrete.Quizes.Questions\Concrete.Quizes.Questions.csproj" />
	  <ProjectReference Include="..\Concrete.Storage.EfCore\Concrete.Storage.EfCore.csproj" />
	</ItemGroup>

	<ItemGroup>
	  <Folder Include="data\" />
	  <Folder Include="generated-docs\" />
	</ItemGroup>
	<Target Name="SwaggerPostBuildTarget" AfterTargets="Build">
		<Exec Command="dotnet tool restore"></Exec>
		<Exec Command="dotnet swagger tofile --output generated-docs\swagger.json $(OutDir)\Concrete.Server.dll v1 " />
		<Exec Command="npx swagger-typescript-api -p generated-docs\swagger.json -o client-app/src/api" />
	</Target>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.6" />
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<Content Remove="generated-docs"/>
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)build\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

</Project>
