@page "/modeler/course-template/{Id:guid}"
@using Concrete.Interface.Templates
@using Concrete.Modeler.Client
@inject IModelerClient client
@rendermode InteractiveServer


<h3>Course template</h3>
@if (_course is null)
{
    <span>Loading course template @Id</span>
}
else
{
    <input value="@_course.Value.Name" />
    <table class="table">
        <thead>
            <tr>
                <td></td>
                <td>Classes</td>
                <td></td>
            </tr>
            <tr>
                <td>Name</td>
                <td>Number of activities</td>
                <td></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var courseClass in _course.Value.Classes)
            {
                <tr>
                    <td>@courseClass.Name</td>
                    <td>@courseClass.ActivityCount</td>
                    <td>
                        <a class="btn btn-dark" href="/modeler/class-template/@courseClass.Id">Edit</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <button @onclick="AddClass">Add Class</button>
}
@code {
    [Parameter]
    public Guid Id { get; set; }
    private CourseTemplateDetails? _course;

    protected override async Task OnInitializedAsync()
    {
        _course = await client.GetCourseTemplateAsync(Id, CancellationToken.None);
    }
    private async Task AddClass(MouseEventArgs e)
    {
        _course = _course!.Value with
        {
            Classes = _course!.Value.Classes.Append(
                await client.CreateCourseClassTemplateAsync(
                    _course.Value.Id,
                    "New class",
                    CancellationToken.None
                )).ToArray()
        };
    }
}
